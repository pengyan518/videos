import {createAsyncThunk, createSlice, PayloadAction} from '@reduxjs/toolkit'
// import axios from 'axios'

import config from '../../config'

export interface ShortsState {
  isMuted: boolean
  status: 'idle' | 'loading' | 'failed' | 'initial'
  vimeoPlayer: any
}

const initialState: ShortsState = {
  isMuted: false,
  status: 'initial',
  vimeoPlayer: null,
}

// The function below is called a thunk and allows us to perform async logic. It
// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This
// will call the thunk with the `dispatch` function as the first argument. Async
// code can then be executed and other actions can be dispatched. Thunks are
// typically used to make async requests.
// export const fetchInitial = createAsyncThunk('intro/fetchInitial', async () => {
//   const {data} = await axios.get(config.wisyAPI)
//   // The value we return becomes the `fulfilled` action payload
//   return data
// })

export const shortsSlice = createSlice({
  name: 'shorts',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    setToggleMuted: (state, action) => {
      state.isMuted = action.payload
    },
    setVimeoInstance: (state, action) => {
      state.vimeoPlayer = action.payload
    },
    // Use the PayloadAction type to declare the contents of `action.payload`
    // incrementByAmount: (state, action: PayloadAction<number>) => {
    //   state.value += action.payload
    // },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  // extraReducers: builder => {
  //   builder
  //     .addCase(fetchInitial.pending, state => {
  //       state.status = 'loading'
  //     })
  //     .addCase(fetchInitial.fulfilled, (state, action) => {
  //       state.status = 'idle'
  //       state.content = action.payload
  //     })
  //     .addCase(fetchInitial.rejected, state => {
  //       state.status = 'failed'
  //     })
  // },
})

export const {setToggleMuted, setVimeoInstance} = shortsSlice.actions

export default shortsSlice.reducer
